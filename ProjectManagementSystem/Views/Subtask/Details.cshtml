@using Microsoft.AspNetCore.Identity
@using ProjectManagementSystem.Data.Models
@model SubtaskViewModel
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewBag.Title = Model.Name;
    IEnumerable<CommentViewModel> comments = ViewBag.Comments;
    var commentsCount = ViewBag.NumberOfComments;
    var commentModel = new CommentViewModel();
    var commentDelModel = new CommentViewModel();
    int commentId = new int();
    var subtaskId = Model.Id;
}

<h1>@ViewBag.Title</h1>
<h6>Project: @Model.Project</h6>
<h6>Category: @Model.Category</h6>
<hr />
<h3>Status: <a class="StatusLink" asp-controller="Subtask" asp-action="ChangeStatus" asp-route-subtaskId="@Model.Id">@Model.Status</a> </h3>
<table class="table table-striped">
    <thead>
        <tr>
            <th>Description</th>
            <th></th>
            <th>Team</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.Description</td>
            <td></td>
            <td>
                @foreach (var specialist in Model.SpecialistsIds)
                {
                    <img class="mr-3 rounded-circle" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.FindByIdAsync(specialist).Result.ProfilePicture))" style="max-width:50px">
                }
            </td>
            <td>
                <a class="btn btn-primary" asp-controller="Subtask" asp-action="AddSpecialist" asp-route-subtaskId="@Model.Id">Add specialist</a>
            </td>
        </tr>
    </tbody>
</table>


@*------------------------------------------------COMMENTS SECTION----------------------------------------------------*@


<div class="container cardTransparent">
    <div class="row">
        <div class="col-sm-8">
            <form asp-action="Details" method="post">
                <small>&nbsp</small>
                <h4>@commentsCount Comments</h4>
                <small>&nbsp</small>
                <fieldset>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
                        {
                            <img style="width:50px;height:50px; border-radius:40px; float:left;" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))">
                            <h5 class="my-0 text-dark d-block"><strong>&nbsp You</strong></h5>
                            <small>&nbsp @@@(UserManager.GetUserAsync(User).Result.UserName)</small>
                            <small>&nbsp</small>
                        }
                    }
                    <small>&nbsp</small>
                    <div class="form-group col-xs-12 col-sm-9 col-lg-10">
                        <small>&nbsp</small>
                        <input type="hidden" asp-for="@commentModel.AuthorId" value="@UserManager.GetUserAsync(User).Result.Id" />
                        <input type="hidden" asp-for="@commentModel.SubtaskId" value="@Model.Id" />
                        <textarea class="form-control" asp-for="@commentModel.CommentPost" placeholder="Type your comment here..." required=""></textarea>
                    </div>
                    <input type="hidden" asp-for="@commentModel.AuthorId" value="@UserManager.GetUserAsync(User).Result.Id" />
                    <input type="hidden" asp-for="@commentModel.SubtaskId" value="@subtaskId" />
                    <small>&nbsp</small>
                    <div>
                               <button type="submit" class="btn btn-primary"> Add comment</button>
                    </div>
                    <p>&nbsp</p>
                </fieldset>
            </form>
            <!-- COMMENT - START -->
            @foreach (var comment in comments.Reverse())
            {
                    <hr />
                    <div class="media">

                        <img style="width:40px;height:40px; border-radius:30px; float:left;" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.FindByIdAsync(comment.AuthorId).Result.ProfilePicture))">
                        <h5 class="my-0 text-dark d-block"> &nbsp @(UserManager.FindByIdAsync(comment.AuthorId).Result.Name) @(UserManager.FindByIdAsync(comment.AuthorId).Result.Surname)</h5>
                        <small>&nbsp @@@(UserManager.FindByIdAsync(comment.AuthorId).Result.UserName)</small>

                        <p><strong>@comment.CommentPost</strong></p>
                        @if (UserManager.GetUserAsync(User).Result.Id == UserManager.FindByIdAsync(comment.AuthorId).Result.Id)
                        {
                            <ul class="list-unstyled list-inline media-detail pull-right">
                                <form asp-controller="Comment" asp-action="Delete" method="post">
                                    <input type="hidden" asp-for="@commentId" value="@comment.Id" />
                                    <input type="hidden" asp-for="@subtaskId" value="@subtaskId" />
                                <li><input type="submit" value="[Delete]"/></li>
                                </form>
                            </ul>
                        }
                    </div>
            }

            <!-- COMMENT - END -->
        </div>
    </div>
</div>
