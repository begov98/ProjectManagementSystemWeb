@using Microsoft.AspNetCore.Identity
@using ProjectManagementSystem.Data.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item" style="align-self: center;">
            @if (UserManager.GetUserAsync(User).Result.ProfilePicture != null)
            {
                <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="data:image/*;base64,@(Convert.ToBase64String(UserManager.GetUserAsync(User).Result.ProfilePicture))">
            }
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><strong>Hello @User?.Identity?.Name </strong></a>
        </li>
        @if (User!.IsInRole("Manager") || User.IsInRole("ProjectManager"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Projects" asp-action="Add">Add project</a>
            </li>
            <li class="nav-item">
                <small>&nbsp</small>
            </li>
        }
        @if (User.IsInRole("Manager"))
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="RoleManager" asp-action="Index">Role Manager</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="UserRoles" asp-action="Index">User Manager</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-controller="Projects" asp-action="ManageProjects">Manage Projects</a>
            </li>
        }

        <li class="nav-item">
            <form class="form-inline" asp-controller="User" asp-action="Logout" asp-route-id="@UserManager.GetUserId(User)">
                <button type="submit" class="nav-link btn btn-link text-dark">[Logout]</button>
            </form>
        </li>
    }
</ul>